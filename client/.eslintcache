[{"/root/Documentos/alkemyChallnege/client/src/index.js":"1","/root/Documentos/alkemyChallnege/client/src/reportWebVitals.js":"2","/root/Documentos/alkemyChallnege/client/src/App.js":"3","/root/Documentos/alkemyChallnege/client/src/themes/GlobalTheme.js":"4","/root/Documentos/alkemyChallnege/client/src/components/navBar/Index.js":"5","/root/Documentos/alkemyChallnege/client/src/store/store.js":"6","/root/Documentos/alkemyChallnege/client/src/reducers/index.js":"7","/root/Documentos/alkemyChallnege/client/src/reducers/user.js":"8","/root/Documentos/alkemyChallnege/client/src/actions/user.js":"9","/root/Documentos/alkemyChallnege/client/src/components/login/LogIn.js":"10","/root/Documentos/alkemyChallnege/client/src/components/login/Register.js":"11","/root/Documentos/alkemyChallnege/client/src/components/home/Index.js":"12","/root/Documentos/alkemyChallnege/client/src/components/home/currentBalance.js":"13","/root/Documentos/alkemyChallnege/client/src/components/home/lastMoves.js":"14","/root/Documentos/alkemyChallnege/client/src/reducers/balance.js":"15","/root/Documentos/alkemyChallnege/client/src/actions/balance.js":"16","/root/Documentos/alkemyChallnege/client/src/reducers/transactions.js":"17","/root/Documentos/alkemyChallnege/client/src/actions/transactions.js":"18","/root/Documentos/alkemyChallnege/client/src/components/home/loader.js":"19","/root/Documentos/alkemyChallnege/client/src/components/newTransaction/index.js":"20","/root/Documentos/alkemyChallnege/client/src/components/newTransaction/newTransaction.js":"21","/root/Documentos/alkemyChallnege/client/src/components/home/balanceChart.js":"22","/root/Documentos/alkemyChallnege/client/src/components/history/index.js":"23","/root/Documentos/alkemyChallnege/client/src/components/history/dataCard.js":"24","/root/Documentos/alkemyChallnege/client/src/actions/history.js":"25","/root/Documentos/alkemyChallnege/client/src/reducers/history.js":"26","/root/Documentos/alkemyChallnege/client/src/components/login/logout.js":"27"},{"size":703,"mtime":1609212283126,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1609161780940,"results":"30","hashOfConfig":"29"},{"size":1320,"mtime":1614307186891,"results":"31","hashOfConfig":"29"},{"size":359,"mtime":1609253344824,"results":"32","hashOfConfig":"29"},{"size":1646,"mtime":1611666198976,"results":"33","hashOfConfig":"29"},{"size":855,"mtime":1609211371866,"results":"34","hashOfConfig":"29"},{"size":229,"mtime":1612140251521,"results":"35","hashOfConfig":"29"},{"size":566,"mtime":1609212120138,"results":"36","hashOfConfig":"29"},{"size":695,"mtime":1614315519976,"results":"37","hashOfConfig":"29"},{"size":4329,"mtime":1614319472612,"results":"38","hashOfConfig":"29"},{"size":6202,"mtime":1609281085780,"results":"39","hashOfConfig":"29"},{"size":6903,"mtime":1614319548624,"results":"40","hashOfConfig":"29"},{"size":3257,"mtime":1614456984030,"results":"41","hashOfConfig":"29"},{"size":4582,"mtime":1612043020671,"results":"42","hashOfConfig":"29"},{"size":797,"mtime":1611582966388,"results":"43","hashOfConfig":"29"},{"size":519,"mtime":1611583266288,"results":"44","hashOfConfig":"29"},{"size":559,"mtime":1610493940760,"results":"45","hashOfConfig":"29"},{"size":371,"mtime":1610489751416,"results":"46","hashOfConfig":"29"},{"size":2590,"mtime":1614526887249,"results":"47","hashOfConfig":"29"},{"size":6767,"mtime":1614318448652,"results":"48","hashOfConfig":"29"},{"size":7180,"mtime":1611233384752,"results":"49","hashOfConfig":"29"},{"size":3109,"mtime":1611667615708,"results":"50","hashOfConfig":"29"},{"size":9910,"mtime":1614317263132,"results":"51","hashOfConfig":"29"},{"size":12948,"mtime":1614526748425,"results":"52","hashOfConfig":"29"},{"size":243,"mtime":1612140162653,"results":"53","hashOfConfig":"29"},{"size":396,"mtime":1612140133905,"results":"54","hashOfConfig":"29"},{"size":2189,"mtime":1614313586932,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"6ejmzm",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},"/root/Documentos/alkemyChallnege/client/src/index.js",[],["115","116"],"/root/Documentos/alkemyChallnege/client/src/reportWebVitals.js",[],"/root/Documentos/alkemyChallnege/client/src/App.js",[],"/root/Documentos/alkemyChallnege/client/src/themes/GlobalTheme.js",[],"/root/Documentos/alkemyChallnege/client/src/components/navBar/Index.js",[],["117","118"],"/root/Documentos/alkemyChallnege/client/src/store/store.js",[],"/root/Documentos/alkemyChallnege/client/src/reducers/index.js",[],"/root/Documentos/alkemyChallnege/client/src/reducers/user.js",[],"/root/Documentos/alkemyChallnege/client/src/actions/user.js",[],"/root/Documentos/alkemyChallnege/client/src/components/login/LogIn.js",[],"/root/Documentos/alkemyChallnege/client/src/components/login/Register.js",[],"/root/Documentos/alkemyChallnege/client/src/components/home/Index.js",[],"/root/Documentos/alkemyChallnege/client/src/components/home/currentBalance.js",[],"/root/Documentos/alkemyChallnege/client/src/components/home/lastMoves.js",["119","120","121","122"],"import React,{useState,useEffect} from 'react';\nimport {Link} from 'react-router-dom' \nimport {connect} from 'react-redux';\nimport cx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\n//----------Card imports------------------------------------------------------\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { useContainedCardHeaderStyles } from '@mui-treasury/styles/cardHeader/contained';\nimport { useSoftRiseShadowStyles } from '@mui-treasury/styles/shadow/softRise';\nimport { useFadedShadowStyles } from '@mui-treasury/styles/shadow/faded';\n//--------------Table Imports--------------------------------------------------\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\n\n//------------------------------Other imports----------------------------------------------------------\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { Grid } from '@material-ui/core';\n\n\nconst useStyles = makeStyles(({ spacing }) => ({\n  card: {\n    marginTop: 40,\n    borderRadius: spacing(0.5),\n    transition: '0.3s',\n    width: '90%',\n    overflow: 'initial',\n    background: '#ffffff',\n  },\n  content: {\n    paddingTop: 0,\n    textAlign: 'center',\n    overflowX: 'auto',\n    '& table': {\n      marginBottom: 0,\n    }\n  },\n  button: {\n    margin: spacing(1),\n    width:'100%'\n  },\n}));\n\n\nlet rows = [];\n\nfunction createData(fecha,concepto,categoria,monto) {\n  return {fecha,concepto,categoria,monto};\n}\n\nexport function LastMoves(props) {\n\n  useEffect(()=>{\n    populate(props)\n  },[])\n\n\n  const classes = useStyles();\n  const cardHeaderStyles = useContainedCardHeaderStyles();\n  const cardShadowStyles = useSoftRiseShadowStyles({ inactive: true });\n  const cardHeaderShadowStyles = useFadedShadowStyles();\n  const [since,setSince]=useState();\n  const [untill,setUntill]=useState()\n\n\n\n  function populate(props){\n    rows =[]\n    let categorie=''\n    setSince(props.moves[props.moves.length-1].date)\n    setUntill(props.moves[0].date)\n    props.moves.map(item=>{\n      if(rows.includes(item)===false){\n        props.categories.map(cat=>{\n          if (cat.id==item.categoryId){\n            categorie=cat.name\n          }\n        })\n        rows.unshift(\n          createData(\n          item.date,\n          item.concept,\n          categorie,\n          item.amount\n          ))\n        }  \n      })\n    } \n\n   \n  return (\n    <Card className={cx(classes.card, cardShadowStyles.root)}>\n      <CardHeader\n        className={cardHeaderShadowStyles.root}\n        classes={cardHeaderStyles}\n        title={'Ultimos 5 Movimientos'}\n        subheader={'Desde: '+since+' Hasta: '+untill}\n      />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Fecha</TableCell>\n              <TableCell align=\"left\">Concepto</TableCell>\n              <TableCell align=\"right\">Categoria</TableCell>\n              <TableCell align=\"right\">Monto</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map(row => (\n              <TableRow key={row.fecha}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.fecha}\n                </TableCell>\n                <TableCell align=\"left\">{row.concepto}</TableCell>\n                <TableCell align=\"right\">{row.categoria}</TableCell>\n                <TableCell align=\"right\">${row.monto}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\" >\n          <Grid item justify={\"right\"} xs={12} sm={3}>\n            <Link to=\"/history\">\n              <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<AddCircleIcon/>}\n                  >\n                  Ver Historial \n              </Button>\n            </Link>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst mapStateToProps = state => {\t\t\n  return {\t\t\n    user: state.user.user,\n    moves:state.moves.moves,\n    categories:state.moves.categories\n  }\t\t\n}\n\nexport default connect(mapStateToProps)(LastMoves);","/root/Documentos/alkemyChallnege/client/src/reducers/balance.js",[],"/root/Documentos/alkemyChallnege/client/src/actions/balance.js",[],"/root/Documentos/alkemyChallnege/client/src/reducers/transactions.js",[],"/root/Documentos/alkemyChallnege/client/src/actions/transactions.js",[],"/root/Documentos/alkemyChallnege/client/src/components/home/loader.js",["123","124"],"/root/Documentos/alkemyChallnege/client/src/components/newTransaction/index.js",[],"/root/Documentos/alkemyChallnege/client/src/components/newTransaction/newTransaction.js",[],"/root/Documentos/alkemyChallnege/client/src/components/home/balanceChart.js",["125"],"import React, { PureComponent } from 'react'\nimport Chart from \"chart.js\";\nimport classes from \"./balanceChart.css\";\nimport { green, grey } from '@material-ui/core/colors';\n\nChart.defaults.global.defaultFontFamily = \"'PT Sans', sans-serif\"\n// Chart.defaults.global.legend.display = true;\n// Chart.defaults.global.elements.line.tension = 0;\n\nexport default class LineGraph extends PureComponent {\n    chartRef = React.createRef();\n\n    newChart={}\n    minValue=0\n\n    componentDidMount() {\n\n        this.buildChart();\n    }\n\n    componentDidUpdate() {\n        this.newChart.destroy()\n\n        this.buildChart();\n    }\n\n\n    \n    buildChart = () => {\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\n        const { data,labels} = this.props;\n        let type1={\n                label: \"Saldo ($)\",\n                data: data,\n                yAxisID:'A',\n                type:\"line\",\n                fill:false,\n                borderColor: green[400],\n                backgroundColor:green[400],\n                \n            }\n           \n        \n       this.newChart= new Chart(myChartRef, {\n            \n            data: {\n                //Bring in data\n                labels: labels.length === data.length ? labels : new Array(data.length).fill(\"Data\"),\n                datasets: [\n                    {\n                        label:type1.label,\n                        data: type1.data,\n                        yAxisID:type1.yAxisID,\n                        fill: type1.fill,\n                        type:type1.type,\n                        borderColor:type1.borderColor,\n                        backgroundColor:type1.backgroundColor,\n                        pointRadius: 5\n                    },\n\n                ]\n            },\n            options: {\n                //Customize chart options\n                responsive: true,\n                maintainAspectRatio: false,\n\n                layout: {\n                    padding: {\n                        top: 5,\n                        left: 15,\n                        right: 15,\n                        bottom: 5\n                    }\n                },\n                scales: {\n                    xAxes: [{\n                        gridLines: {\n                            display: true,\n                            drawBorder: false,\n                            offsetGridLines: true\n                        },\n                    }],\n                    yAxes: [{\n                        id:type1.yAxisID,\n                        scaleLabel:{display:true, labelString:type1.label},\n\n                        gridLines: {\n                            display: true,\n                            drawBorder: true\n                        }\n                    \n                    }],\n                    \n                }\n              }\n        });\n    }\n    render() {\n        return (\n            <div className={classes.graphContainer} >\n                <canvas \n                    id=\"myChart\"\n                    ref={this.chartRef}\n                    height='300'\n                />\n            </div>\n        )\n    }\n}","/root/Documentos/alkemyChallnege/client/src/components/history/index.js",[],"/root/Documentos/alkemyChallnege/client/src/components/history/dataCard.js",["126","127","128","129","130","131","132"],"/root/Documentos/alkemyChallnege/client/src/actions/history.js",[],"/root/Documentos/alkemyChallnege/client/src/reducers/history.js",[],"/root/Documentos/alkemyChallnege/client/src/components/login/logout.js",["133"],"import React,{useEffect} from \"react\";\nimport {useHistory} from 'react-router-dom';\nimport Axios from 'axios'\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from '@material-ui/core/styles';\n//---------------REDUX-----------------------------------------------\nimport {connect} from 'react-redux';\nimport {cleanHistory} from './../../actions/history';\nimport {cleanBalance} from './../../actions/balance';\nimport {cleanMoves} from './../../actions/transactions';\nimport {cleanUser} from './../../actions/user';\n\n//------------------Import Components----------------------------------\n\n\nconst useStyles = makeStyles((theme) => ({\n    cards: {\n      minHeight: 50,\n      minWidth:320,\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems:\"center\",\n      padding: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      backgroundColor:\"#0077b3\",\n      [theme.breakpoints.up(\"md\")]: {\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        marginBottom: theme.spacing(9),\n      },\n    },\n\n  }));\n\nexport function Loader(props) {\n   useEffect(()=>{\n    logOut()\n    \n  },[])\n  const history = useHistory()\n  const styles = useStyles();\n\n  const logOut = async (e) =>{\n  \n    props.cleanHistory()\n    props.cleanBalance()\n    props.cleanMoves()\n    props.cleanUser()\n    await Axios.get('http://localhost:3001/logout',{withCredentials:true})\n    .then( res=>{\n      sessionAlert()\n    })\n    .catch(err=>{\n      alert(err);\n    })\n    \n    backToStart()\n    \n    \n  }\n\n  const backToStart =() =>{\n    history.push(\"/\")\n  }\n\n  const sessionAlert = () =>{\n    alert(\"Sesión cerrada\")\n  }\n\n\n  return (\n    <Grid container spacing={3} className={styles.cards}>\n\n    </Grid>\n  );\n}\n\nconst mapStateToProps = state => {\t\t\n  return {\t\t\n    user: state.user.user,\n  }\t\t\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    cleanHistory:()=>dispatch(cleanHistory()),\n    cleanBalance:()=>dispatch(cleanBalance()),\n    cleanMoves:()=>dispatch(cleanMoves()),\n    cleanUser:()=>dispatch(cleanUser()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Loader);",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"134","replacedBy":"138"},{"ruleId":"136","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":60,"column":5,"nodeType":"142","endLine":60,"endColumn":7,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":77,"column":25,"nodeType":"146","messageId":"147","endLine":77,"endColumn":27},{"ruleId":"144","severity":1,"message":"145","line":79,"column":33,"nodeType":"146","messageId":"147","endLine":79,"endColumn":35},{"ruleId":"148","severity":1,"message":"149","line":80,"column":21,"nodeType":"150","messageId":"151","endLine":80,"endColumn":23},{"ruleId":"140","severity":1,"message":"152","line":37,"column":5,"nodeType":"142","endLine":37,"endColumn":7,"suggestions":"153"},{"ruleId":"144","severity":1,"message":"145","line":53,"column":39,"nodeType":"146","messageId":"147","endLine":53,"endColumn":41},{"ruleId":"154","severity":1,"message":"155","line":4,"column":17,"nodeType":"156","messageId":"157","endLine":4,"endColumn":21},{"ruleId":"140","severity":1,"message":"158","line":83,"column":5,"nodeType":"142","endLine":83,"endColumn":7,"suggestions":"159"},{"ruleId":"144","severity":1,"message":"145","line":120,"column":31,"nodeType":"146","messageId":"147","endLine":120,"endColumn":33},{"ruleId":"148","severity":1,"message":"149","line":121,"column":19,"nodeType":"150","messageId":"151","endLine":121,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":191,"column":27,"nodeType":"146","messageId":"147","endLine":191,"endColumn":29},{"ruleId":"144","severity":1,"message":"145","line":193,"column":33,"nodeType":"146","messageId":"147","endLine":193,"endColumn":35},{"ruleId":"148","severity":1,"message":"149","line":194,"column":21,"nodeType":"150","messageId":"151","endLine":194,"endColumn":23},{"ruleId":"144","severity":1,"message":"160","line":319,"column":46,"nodeType":"146","messageId":"161","endLine":319,"endColumn":48},{"ruleId":"140","severity":1,"message":"162","line":41,"column":5,"nodeType":"142","endLine":41,"endColumn":7,"suggestions":"163"},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],["164"],["165"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["166"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getBalance' and 'props'. Either include them or remove the dependency array.",["167"],"no-unused-vars","'grey' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'populate' and 'props'. Either include them or remove the dependency array.",["168"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has a missing dependency: 'logOut'. Either include it or remove the dependency array.",["169"],"no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [props]",{"range":"178","text":"179"},"Update the dependencies array to be: [getBalance, props]",{"range":"180","text":"181"},"Update the dependencies array to be: [populate, props]",{"range":"182","text":"183"},"Update the dependencies array to be: [logOut]",{"range":"184","text":"185"},[1868,1870],"[props]",[1057,1059],"[getBalance, props]",[2962,2964],"[populate, props]",[1191,1193],"[logOut]"]